generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://u1:1@localhost/TodaySky"
}

model User {
  id       String  @id @default(uuid())
  username String  @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  refresh  String? @db.VarChar(255)
  diary    diary[]
  todo     todo[]
  // TODO:
  // salt     String  @db.VarChar(255)
  // email    String  @unique @db.VarChar(255)
}

model emotion {
  id      Int       @id @default(autoincrement())
  feel    String    @db.VarChar(255)
  comment comment[]
  diary   diary[]
}

model diary {
  content    String   @db.Text
  year       Int
  month      Int
  date       Int
  emotion_id Int?
  emotion    emotion? @relation(fields: [emotion_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "diary_ibfk_1")
  user_id    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([year, month, date, user_id])
  @@index([emotion_id], map: "emotion_id")
  @@index([user_id], map: "user_id")
}

model todo {
  id      Int       @id @default(autoincrement())
  content String    @db.Text
  year    Int
  month   Int
  date    Int
  user_id String
  checked Boolean   @default(false)
  comment comment[]
  user    User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id], map: "user_id")
}

model comment {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  todo_id    Int
  emotion_id Int?
  todo       todo     @relation(fields: [todo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_1")
  emotion    emotion? @relation(fields: [emotion_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_2")

  @@index([emotion_id], map: "emotion_id")
  @@index([todo_id], map: "todo_id")
}
